// <auto-generated />
using Airly.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Airly.Migrations
{
    [DbContext(typeof(AirlyContext))]
    [Migration("20250606092750_TravelerNullable")]
    partial class TravelerNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Airly.Models.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MapUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("Airly.Models.Connection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FromAirportId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfSlots")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToAirportId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FromAirportId");

                    b.HasIndex("ToAirportId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("Airly.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Kraków",
                            Country = "Poland",
                            Description = "Kraków, officially the Royal Capital City of Kraków, is the second-largest and one of the oldest cities in Poland. Situated on the Vistula River in Lesser Poland Voivodeship, the city has a population of 804,237 (2023), with approximately 8 million additional people living within a 100 km (62 mi) radius.",
                            ImgUrl = "https://media.krakow.travel/photos/18784/xxl.jpg"
                        },
                        new
                        {
                            Id = 2,
                            City = "London",
                            Country = "England",
                            Description = "London is the capital and largest city of both England and the United Kingdom, with a population of 8,866,180 in 2022. Its wider metropolitan area is the largest in Western Europe, with a population of 14.9 million.",
                            ImgUrl = "https://res.cloudinary.com/aenetworks/image/upload/c_fill,ar_2,w_3840,h_1920,g_auto/dpr_auto/f_auto/q_auto:eco/v1/topic-london-gettyimages-760251843-feature?_a=BAVAZGDX0"
                        });
                });

            modelBuilder.Entity("Airly.Models.Ticket", b =>
                {
                    b.Property<int>("TravelerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConnectionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TravelerId", "ConnectionId");

                    b.HasIndex("ConnectionId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Airly.Models.Traveler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Travelers");
                });

            modelBuilder.Entity("Airly.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@airly.com",
                            PasswordHash = "21232f297a57a5a743894a0e4a801fc3"
                        });
                });

            modelBuilder.Entity("Airly.Models.Airport", b =>
                {
                    b.HasOne("Airly.Models.Location", "Location")
                        .WithMany("Airports")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Airly.Models.Connection", b =>
                {
                    b.HasOne("Airly.Models.Airport", "FromAirport")
                        .WithMany("DepartingConnections")
                        .HasForeignKey("FromAirportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Airly.Models.Airport", "ToAirport")
                        .WithMany("ArrivingConnections")
                        .HasForeignKey("ToAirportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromAirport");

                    b.Navigation("ToAirport");
                });

            modelBuilder.Entity("Airly.Models.Ticket", b =>
                {
                    b.HasOne("Airly.Models.Connection", "Connection")
                        .WithMany("Tickets")
                        .HasForeignKey("ConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airly.Models.Traveler", "Traveler")
                        .WithMany("Tickets")
                        .HasForeignKey("TravelerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Connection");

                    b.Navigation("Traveler");
                });

            modelBuilder.Entity("Airly.Models.Traveler", b =>
                {
                    b.HasOne("Airly.Models.User", "User")
                        .WithMany("Travelers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Airly.Models.Airport", b =>
                {
                    b.Navigation("ArrivingConnections");

                    b.Navigation("DepartingConnections");
                });

            modelBuilder.Entity("Airly.Models.Connection", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Airly.Models.Location", b =>
                {
                    b.Navigation("Airports");
                });

            modelBuilder.Entity("Airly.Models.Traveler", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Airly.Models.User", b =>
                {
                    b.Navigation("Travelers");
                });
#pragma warning restore 612, 618
        }
    }
}
